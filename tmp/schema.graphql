schema {
  query: Root
  mutation: Mutation
}

type Candidate implements Node {
  # The ID of an object
  id: ID!
  fullName: String!
  firstName: String!
  lastName: String!
  emailAddress: String!
  gravatar: String!
  voteCount: Int!
  votes: VoteConnection
}

# A connection to a list of items.
type CandidateConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [CandidateEdge]
}

# An edge in a connection.
type CandidateEdge {
  # The item at the end of the edge
  node: Candidate

  # A cursor for use in pagination
  cursor: String!
}

input CreateCandidateInput {
  firstName: String!
  lastName: String!
  emailAddress: String!
  clientMutationId: String
}

type CreateCandidatePayload {
  createdCandidateEdge: CandidateEdge
  root: Root
  clientMutationId: String
}

type Mutation {
  CreateCandidate(input: CreateCandidateInput!): CreateCandidatePayload
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Root {
  root: Root!
  id: String!

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  candidates(after: String, first: Int, before: String, last: Int, order: [String]): CandidateConnection
  votes(after: String, first: Int, before: String, last: Int): VoteConnection
}

type Vote implements Node {
  # The ID of an object
  id: ID!
  voterName: String
  candidate: Candidate
}

# A connection to a list of items.
type VoteConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [VoteEdge]
}

# An edge in a connection.
type VoteEdge {
  # The item at the end of the edge
  node: Vote

  # A cursor for use in pagination
  cursor: String!
}
